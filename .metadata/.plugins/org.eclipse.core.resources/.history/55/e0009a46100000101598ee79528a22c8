/*
 * stream_process.c
 *
 *  Created on: Mar 13, 2025
 *      Author: lam
 */

#include "stream_process.h"
#include <string.h>

#define BOARD_SIZE 8

char current_board[BOARD_SIZE][BOARD_SIZE];

void init_board() {
    memset(current_board, ' ', sizeof(current_board));
    // Dessiner l'Ã©chiquier initial
    for (int row = 0; row < BOARD_SIZE; row++) {
        for (int col = 0; col < BOARD_SIZE; col++) {
            draw_square(' ', row, col);
        }
    }
}

void draw_square(char piece, int row, int col) {
    const int SQUARE_SIZE = PIECE_FONT_SIZE;
    uint32_t square_color = ((row + col) % 2 == 0) ? LCD_COLOR_LIGHTGRAY : LCD_COLOR_BROWN;

    BSP_LCD_SetBackColor(square_color);
    BSP_LCD_FillRect(col * SQUARE_SIZE + 150, row * SQUARE_SIZE, SQUARE_SIZE, SQUARE_SIZE);

    if (piece != ' ') {
        BSP_LCD_SetFont(PIECE_FONT);
        char display_piece = toupper(piece);
        BSP_LCD_SetTextColor(islower(piece) ? LCD_COLOR_BLACK : LCD_COLOR_WHITE);
        char piece_str[2] = {display_piece, '\0'};
        BSP_LCD_DisplayStringAt(col * SQUARE_SIZE + 150, row * SQUARE_SIZE, (uint8_t*)piece_str, LEFT_MODE);
    }
}

void parse_fen(const char* fen) {
    int row = 0, col = 0;
    char new_board[BOARD_SIZE][BOARD_SIZE];
    memset(new_board, ' ', sizeof(new_board));

    while (*fen && *fen != ' ') {
        if (*fen == '/') {
            row++;
            col = 0;
        } else if (*fen >= '1' && *fen <= '8') {
            col += *fen - '0';
        } else {
            new_board[row][col] = *fen;
            col++;
        }
        fen++;
    }

    // Update only changed squares
    for (int r = 0; r < BOARD_SIZE; r++) {
        for (int c = 0; c < BOARD_SIZE; c++) {
            if (new_board[r][c] != current_board[r][c]) {
                draw_square(new_board[r][c], r, c);
                current_board[r][c] = new_board[r][c];
            }
        }
    }
}

void process_stream(const char* buffer) {
    const char* fen_start = strstr(buffer, "\"fen\":\"");
    if (fen_start) {
        fen_start += 7; // Skip "fen":"
        const char* fen_end = strchr(fen_start, '"');
        if (fen_end) {
            char fen[128];
            int fen_length = fen_end - fen_start;
            strncpy(fen, fen_start, fen_length);
            fen[fen_length] = '\0';
            parse_fen(fen);
        }
    }
}
