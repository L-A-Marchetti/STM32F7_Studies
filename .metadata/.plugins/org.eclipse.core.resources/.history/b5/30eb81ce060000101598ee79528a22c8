/*
 * stream_process.c
 *
 *  Created on: Mar 13, 2025
 *      Author: lam
 */

#include "stream_process.h"
#include <string.h>

#define BOARD_SIZE 8

char board[BOARD_SIZE][BOARD_SIZE];

void draw_board(const char piece, int row, int col) {
    BSP_LCD_SetFont(PIECE_FONT);
    if (row == 0 && col == 0) {
        BSP_LCD_SetBackColor(LCD_COLOR_BLACK);
        BSP_LCD_Clear(LCD_COLOR_BLACK);
        //BSP_LCD_DrawRect(200, 100, 50, 50);
        //BSP_LCD_FillRect(200, 100, 50, 50);
    }
    BSP_LCD_SetBackColor(LCD_COLOR_GRAY);
    BSP_LCD_SetTextColor(LCD_COLOR_WHITE);
   	char piece_str[2] = {piece, '\0'};
   	BSP_LCD_DisplayStringAt(col * PIECE_FONT_SIZE, row * PIECE_FONT_SIZE, (uint8_t*)piece_str, LEFT_MODE);
}

void parse_fen(const char* fen) {
    memset(board, ' ', sizeof(board));
    int row = 0, col = 0;

    while (*fen && *fen != ' ') {
        if (*fen == '/') {
            row++;
            col = 0;
        } else if (*fen >= '1' && *fen <= '8') {
            int empty_squares = *fen - '0';
            for (int i = 0; i < empty_squares; i++) {
                board[row][col] = ' ';
                draw_board(' ', row, col);
                col++;
            }
        } else {
            board[row][col] = *fen;
            draw_board(*fen, row, col);
            col++;
        }
        fen++;
    }
}


void process_stream(const char* buffer) {
	const char* fen_start = strstr(buffer, "\"fen\":\"");
	if (fen_start) {
	    fen_start += 7; // Sauter "fen":"
	    const char* fen_end = strchr(fen_start, '"');
	    if (fen_end) {
	        char fen[128];
	        int fen_length = fen_end - fen_start;
	        strncpy(fen, fen_start, fen_length);
	        fen[fen_length] = '\0';
	        //debug_log(0, (char*)fen, 0);
	        parse_fen(fen);
	    }
	}
}
